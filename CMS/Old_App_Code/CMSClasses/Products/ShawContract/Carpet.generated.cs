//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.ShawContract;
using CMS.DocumentEngine;
using CMS.Ecommerce;

[assembly: RegisterDocumentType(Carpet.CLASS_NAME, typeof(Carpet))]

namespace CMS.DocumentEngine.Types.ShawContract
{
	/// <summary>
	/// Represents a content item of type Carpet.
	/// </summary>
	public partial class Carpet : SKUTreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "ShawContract.Carpet";


		/// <summary>
		/// The instance of the class that provides extended API for working with Carpet fields.
		/// </summary>
		private readonly CarpetFields mFields;


		/// <summary>
		/// The instance of the class that provides extended API for working with SKU fields.
		/// </summary>
		private readonly ProductFields mProduct;

		#endregion


		#region "Properties"

		/// <summary>
		/// CarpetID.
		/// </summary>
		[DatabaseIDField]
		public int CarpetID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("CarpetID"), 0);
			}
			set
			{
				SetValue("CarpetID", value);
			}
		}


		/// <summary>
		/// Recommended Installation Methods.
		/// </summary>
		[DatabaseField]
		public string RecommendedInstallationMethods
		{
			get
			{
				return ValidationHelper.GetString(GetValue("RecommendedInstallationMethods"), @"");
			}
			set
			{
				SetValue("RecommendedInstallationMethods", value);
			}
		}


		/// <summary>
		/// Colors.
		/// </summary>
		[DatabaseField]
		public string Colors
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Colors"), @"");
			}
			set
			{
				SetValue("Colors", value);
			}
		}


		/// <summary>
		/// Style Name.
		/// </summary>
		[DatabaseField]
		public string StyleName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("StyleName"), @"");
			}
			set
			{
				SetValue("StyleName", value);
			}
		}


		/// <summary>
		/// Style Number.
		/// </summary>
		[DatabaseField]
		public string StyleNumber
		{
			get
			{
				return ValidationHelper.GetString(GetValue("StyleNumber"), @"");
			}
			set
			{
				SetValue("StyleNumber", value);
			}
		}


		/// <summary>
		/// Backing.
		/// </summary>
		[DatabaseField]
		public string Backing
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Backing"), @"");
			}
			set
			{
				SetValue("Backing", value);
			}
		}


		/// <summary>
		/// Tufted Weight.
		/// </summary>
		[DatabaseField]
		public string TuftedWeight
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TuftedWeight"), @"");
			}
			set
			{
				SetValue("TuftedWeight", value);
			}
		}


		/// <summary>
		/// Fiber.
		/// </summary>
		[DatabaseField]
		public string Fiber
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Fiber"), @"");
			}
			set
			{
				SetValue("Fiber", value);
			}
		}


		/// <summary>
		/// Collection.
		/// </summary>
		[DatabaseField]
		public string Collection
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Collection"), @"");
			}
			set
			{
				SetValue("Collection", value);
			}
		}


		/// <summary>
		/// Warranty.
		/// </summary>
		[DatabaseField]
		public string Warranty
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Warranty"), @"");
			}
			set
			{
				SetValue("Warranty", value);
			}
		}


		/// <summary>
		/// Warranty Link.
		/// </summary>
		[DatabaseField]
		public string WarrantyLink
		{
			get
			{
				return ValidationHelper.GetString(GetValue("WarrantyLink"), @"");
			}
			set
			{
				SetValue("WarrantyLink", value);
			}
		}


		/// <summary>
		/// Product Size.
		/// </summary>
		[DatabaseField]
		public string ProductSize
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductSize"), @"");
			}
			set
			{
				SetValue("ProductSize", value);
			}
		}


		/// <summary>
		/// Construction.
		/// </summary>
		[DatabaseField]
		public string Construction
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Construction"), @"");
			}
			set
			{
				SetValue("Construction", value);
			}
		}


		/// <summary>
		/// Product Type.
		/// </summary>
		[DatabaseField]
		public string ProductType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductType"), @"");
			}
			set
			{
				SetValue("ProductType", value);
			}
		}


		/// <summary>
		/// Inventory Type.
		/// </summary>
		[DatabaseField]
		public string InventoryType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("InventoryType"), @"");
			}
			set
			{
				SetValue("InventoryType", value);
			}
		}


		/// <summary>
		/// Link To Full Specs.
		/// </summary>
		[DatabaseField]
		public string LinkFullSpecs
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkFullSpecs"), @"");
			}
			set
			{
				SetValue("LinkFullSpecs", value);
			}
		}


		/// <summary>
		/// Area Per Carton.
		/// </summary>
		[DatabaseField]
		public string AreaPerCarton
		{
			get
			{
				return ValidationHelper.GetString(GetValue("AreaPerCarton"), @"");
			}
			set
			{
				SetValue("AreaPerCarton", value);
			}
		}


		/// <summary>
		/// Kontent Data.
		/// </summary>
		[DatabaseField]
		public string KontentData
		{
			get
			{
				return ValidationHelper.GetString(GetValue("KontentData"), @"");
			}
			set
			{
				SetValue("KontentData", value);
			}
		}


		/// <summary>
		/// Sustainability.
		/// </summary>
		[DatabaseField]
		public string Sustainability
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Sustainability"), @"");
			}
			set
			{
				SetValue("Sustainability", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Carpet fields.
		/// </summary>
		[RegisterProperty]
		public CarpetFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with SKU fields.
		/// </summary>
        [RegisterProperty]
		public ProductFields Product
		{
			get
			{
				return mProduct;
			}
		}


		/// <summary>
		/// Provides extended API for working with Carpet fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class CarpetFields : AbstractHierarchicalObject<CarpetFields>
		{
			/// <summary>
			/// The content item of type Carpet that is a target of the extended API.
			/// </summary>
			private readonly Carpet mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="CarpetFields" /> class with the specified content item of type Carpet.
			/// </summary>
			/// <param name="instance">The content item of type Carpet that is a target of the extended API.</param>
			public CarpetFields(Carpet instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// CarpetID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.CarpetID;
				}
				set
				{
					mInstance.CarpetID = value;
				}
			}


			/// <summary>
			/// Recommended Installation Methods.
			/// </summary>
			public string RecommendedInstallationMethods
			{
				get
				{
					return mInstance.RecommendedInstallationMethods;
				}
				set
				{
					mInstance.RecommendedInstallationMethods = value;
				}
			}


			/// <summary>
			/// Colors.
			/// </summary>
			public string Colors
			{
				get
				{
					return mInstance.Colors;
				}
				set
				{
					mInstance.Colors = value;
				}
			}


			/// <summary>
			/// Style Name.
			/// </summary>
			public string StyleName
			{
				get
				{
					return mInstance.StyleName;
				}
				set
				{
					mInstance.StyleName = value;
				}
			}


			/// <summary>
			/// Style Number.
			/// </summary>
			public string StyleNumber
			{
				get
				{
					return mInstance.StyleNumber;
				}
				set
				{
					mInstance.StyleNumber = value;
				}
			}


			/// <summary>
			/// Backing.
			/// </summary>
			public string Backing
			{
				get
				{
					return mInstance.Backing;
				}
				set
				{
					mInstance.Backing = value;
				}
			}


			/// <summary>
			/// Tufted Weight.
			/// </summary>
			public string TuftedWeight
			{
				get
				{
					return mInstance.TuftedWeight;
				}
				set
				{
					mInstance.TuftedWeight = value;
				}
			}


			/// <summary>
			/// Fiber.
			/// </summary>
			public string Fiber
			{
				get
				{
					return mInstance.Fiber;
				}
				set
				{
					mInstance.Fiber = value;
				}
			}


			/// <summary>
			/// Collection.
			/// </summary>
			public string Collection
			{
				get
				{
					return mInstance.Collection;
				}
				set
				{
					mInstance.Collection = value;
				}
			}


			/// <summary>
			/// Warranty.
			/// </summary>
			public string Warranty
			{
				get
				{
					return mInstance.Warranty;
				}
				set
				{
					mInstance.Warranty = value;
				}
			}


			/// <summary>
			/// Warranty Link.
			/// </summary>
			public string WarrantyLink
			{
				get
				{
					return mInstance.WarrantyLink;
				}
				set
				{
					mInstance.WarrantyLink = value;
				}
			}


			/// <summary>
			/// Product Size.
			/// </summary>
			public string ProductSize
			{
				get
				{
					return mInstance.ProductSize;
				}
				set
				{
					mInstance.ProductSize = value;
				}
			}


			/// <summary>
			/// Construction.
			/// </summary>
			public string Construction
			{
				get
				{
					return mInstance.Construction;
				}
				set
				{
					mInstance.Construction = value;
				}
			}


			/// <summary>
			/// Product Type.
			/// </summary>
			public string ProductType
			{
				get
				{
					return mInstance.ProductType;
				}
				set
				{
					mInstance.ProductType = value;
				}
			}


			/// <summary>
			/// Inventory Type.
			/// </summary>
			public string InventoryType
			{
				get
				{
					return mInstance.InventoryType;
				}
				set
				{
					mInstance.InventoryType = value;
				}
			}


			/// <summary>
			/// Link To Full Specs.
			/// </summary>
			public string LinkFullSpecs
			{
				get
				{
					return mInstance.LinkFullSpecs;
				}
				set
				{
					mInstance.LinkFullSpecs = value;
				}
			}


			/// <summary>
			/// Area Per Carton.
			/// </summary>
			public string AreaPerCarton
			{
				get
				{
					return mInstance.AreaPerCarton;
				}
				set
				{
					mInstance.AreaPerCarton = value;
				}
			}


			/// <summary>
			/// Kontent Data.
			/// </summary>
			public string KontentData
			{
				get
				{
					return mInstance.KontentData;
				}
				set
				{
					mInstance.KontentData = value;
				}
			}


			/// <summary>
			/// Sustainability.
			/// </summary>
			public string Sustainability
			{
				get
				{
					return mInstance.Sustainability;
				}
				set
				{
					mInstance.Sustainability = value;
				}
			}
		}


		/// <summary>
		/// Provides extended API for working with SKU fields.
		/// </summary>
        [RegisterAllProperties]
		public class ProductFields : AbstractHierarchicalObject<ProductFields>
		{
		    /// <summary>
			/// The content item of type <see cref="Carpet" /> that is a target of the extended API.
			/// </summary>
			private readonly Carpet mInstance;


			/// <summary>
			/// The <see cref="PublicStatusInfo" /> object related to product based on value of <see cref="SKUInfo.SKUPublicStatusID" /> column. 
			/// </summary>
			private PublicStatusInfo mPublicStatus = null;


			/// <summary>
			/// The <see cref="ManufacturerInfo" /> object related to product based on value of <see cref="SKUInfo.SKUManufacturerID" /> column. 
			/// </summary>
			private ManufacturerInfo mManufacturer = null;


			/// <summary>
			/// The <see cref="DepartmentInfo" /> object related to product based on value of <see cref="SKUInfo.SKUDepartmentID" /> column. 
			/// </summary>
			private DepartmentInfo mDepartment = null;


			/// <summary>
			/// The <see cref="SupplierInfo" /> object related to product based on value of <see cref="SKUInfo.SKUSupplierID" /> column. 
			/// </summary>
			private SupplierInfo mSupplier = null;


			/// <summary>
			/// The <see cref="TaxClassInfo" /> object related to product based on value of <see cref="SKUInfo.SKUTaxClassID" /> column. 
			/// </summary>
			private TaxClassInfo mTaxClass = null;


			/// <summary>
			/// The <see cref="BrandInfo" /> object related to product based on value of <see cref="SKUInfo.SKUBrandID" /> column. 
			/// </summary>
			private BrandInfo mBrand = null;


			/// <summary>
			/// The <see cref="CollectionInfo" /> object related to product based on value of <see cref="SKUInfo.SKUCollectionID" /> column. 
			/// </summary>
			private CollectionInfo mCollection = null;


			/// <summary>
			/// The shortcut to <see cref="SKUInfo" /> object which is a target of this extended API.
			/// </summary>
			private SKUInfo SKU
			{
				get 
				{
					return mInstance.SKU;
				}
			}

						
			/// <summary>
			/// Initializes a new instance of the <see cref="ProductFields" /> class with SKU related fields of type <see cref="Carpet" /> .
			/// </summary>
			/// <param name="instance">The content item of type Carpet that is a target of the extended API.</param>
			public ProductFields(Carpet instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// SKUID.
			/// </summary>
			public int ID
			{
				get
				{
					return (SKU != null) ? SKU.SKUID : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUID = value;
					}
				}
			}


			/// <summary>
			/// Allows you to specify the product identifier. You can use this number or string, for example, in your accounting records.
			/// </summary>
			public string SKUNumber
			{
				get
				{
					return (SKU != null) ? SKU.SKUNumber : @"";
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUNumber = value;
					}
				}
			}


			/// <summary>
			/// Package weight.
			/// </summary>
			public double Weight
			{
				get
				{
					return (SKU != null) ? SKU.SKUWeight : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUWeight = value;
					}
				}
			}


			/// <summary>
			/// Package height.
			/// </summary>
			public double Height
			{
				get
				{
					return (SKU != null) ? SKU.SKUHeight : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUHeight = value;
					}
				}
			}


			/// <summary>
			/// Package width.
			/// </summary>
			public double Width
			{
				get
				{
					return (SKU != null) ? SKU.SKUWidth : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUWidth = value;
					}
				}
			}


			/// <summary>
			/// Package depth.
			/// </summary>
			public double Depth
			{
				get
				{
					return (SKU != null) ? SKU.SKUDepth : 0;
				}
				set
				{
					if (SKU != null)
					{
						SKU.SKUDepth = value;
					}
				}
			}


			/// <summary>
			/// Gets <see cref="PublicStatusInfo" /> object based on value of <see cref="SKUInfo.SKUPublicStatusID" /> column. 
			/// </summary>
			public PublicStatusInfo PublicStatus
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUPublicStatusID;

				    if ((mPublicStatus == null) && (id > 0))
				    {
                        mPublicStatus = PublicStatusInfoProvider.GetPublicStatusInfo(id);
				    }

				    return mPublicStatus;
				}
			}


			/// <summary>
			/// Gets <see cref="ManufacturerInfo" /> object based on value of <see cref="SKUInfo.SKUManufacturerID" /> column. 
			/// </summary>
			public ManufacturerInfo Manufacturer
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUManufacturerID;

				    if ((mManufacturer == null) && (id > 0))
				    {
                        mManufacturer = ManufacturerInfoProvider.GetManufacturerInfo(id);
				    }

				    return mManufacturer;
				}
			}


			/// <summary>
			/// Gets <see cref="DepartmentInfo" /> object based on value of <see cref="SKUInfo.SKUDepartmentID" /> column. 
			/// </summary>
			public DepartmentInfo Department
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

				    var id = SKU.SKUDepartmentID;

				    if ((mDepartment == null) && (id > 0))
				    {
				        mDepartment = DepartmentInfoProvider.GetDepartmentInfo(id);
                    }

					return mDepartment;
				}
			}


			/// <summary>
			/// Gets <see cref="SupplierInfo" /> object based on value of <see cref="SKUInfo.SKUSupplierID" /> column. 
			/// </summary>
			public SupplierInfo Supplier
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUSupplierID;

				    if ((mSupplier == null) && (id > 0))
				    {
                        mSupplier = SupplierInfoProvider.GetSupplierInfo(id);
                    }

				    return mSupplier;
				}
			}


			/// <summary>
			/// Gets <see cref="TaxClassInfo" /> object based on value of <see cref="SKUInfo.SKUTaxClassID" /> column. 
			/// </summary>
			public TaxClassInfo TaxClass
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUTaxClassID;

				    if ((mTaxClass == null) && (id > 0))
				    {
						mTaxClass = TaxClassInfoProvider.GetTaxClassInfo(id);
				    }
				    
				    return mTaxClass;
				}
			}


			/// <summary>
			/// Gets <see cref="BrandInfo" /> object based on value of <see cref="SKUInfo.SKUBrandID" /> column. 
			/// </summary>
			public BrandInfo Brand
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUBrandID;

					if ((mBrand == null) && (id > 0))
					{
						mBrand = BrandInfoProvider.GetBrandInfo(id);
					}

					return mBrand;
				}
			}


			/// <summary>
			/// Gets <see cref="CollectionInfo" /> object based on value of <see cref="SKUInfo.SKUCollectionID" /> column. 
			/// </summary>
			public CollectionInfo Collection
			{	
				get
				{
					if (SKU == null)
					{
						return null;
					}

					var id = SKU.SKUCollectionID;

					if ((mCollection == null) && (id > 0))
					{
						mCollection = CollectionInfoProvider.GetCollectionInfo(id);
					}

					return mCollection;
				}
			}


			/// <summary>
			/// Localized name of product.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.DocumentSKUName;
				}
				set
				{
					mInstance.DocumentSKUName = value;
				}
			}


			/// <summary>
			/// Localized description of product.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.DocumentSKUDescription;
				}
				set
				{
					mInstance.DocumentSKUDescription = value;
				}
			}


			/// <summary>
			/// Localized short description of product.
			/// </summary>
			public string ShortDescription
			{
				get
				{
					return mInstance.DocumentSKUShortDescription;
				}
				set
				{
					mInstance.DocumentSKUShortDescription = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Carpet" /> class.
		/// </summary>
		public Carpet() : base(CLASS_NAME)
		{
			mFields = new CarpetFields(this);
			mProduct = new ProductFields(this);
		}

		#endregion
	}
}