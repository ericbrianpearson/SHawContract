@using Microsoft.Owin.Security
@if (Request.IsAuthenticated == false)
{
    /**/
    @* Gets a collection of the authentication services registered in your application's startup class *@
    /**/

    var authServices = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();

    @* Generates a form with buttons targeting the RequestSignIn action. Optionally pass a redirect URL as a parameter. *@
    using (Html.BeginForm("RequestSignIn", "Account"))
    {
        @Html.AntiForgeryToken()
        <div class="col-sm-12">
            @foreach (AuthenticationDescription p in authServices)
            {

                <button class="btn btn-login" type="submit" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType">SIGN IN</button>

            }
        </div>
    }
}

@if (Request.IsAuthenticated)
{

    var name = string.Empty;
    var claims = ((System.Security.Claims.ClaimsIdentity)User.Identity).Claims;
    if (claims != null && claims.Count(a => a.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name") == 1)
    {
        name = claims.Single(a => a.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name").Value;
    }
    var usr = CMS.Membership.UserInfoProvider.GetUserInfo(name);
    <div class="col-sm-12">
        <a id="profile-link">Hi @usr.FirstName </a>
    </div>
}
