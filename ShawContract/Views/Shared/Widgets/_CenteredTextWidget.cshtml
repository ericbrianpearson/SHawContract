@using System.Text.RegularExpressions
@using ShawContract.Models.InlineEditors
@using ShawContract.Models.Widgets.CenteredTextWidget
@model ShawContract.Models.Widgets.CenteredTextWidget.CenteredTextWidgetViewModel

@{
    var editMode = Context.Kentico().PageBuilder().EditMode;
    var hasImage = !string.IsNullOrEmpty(Model.ImageUrl);
    var buttonStyle = hasImage ? "btn-secondary" : "btn-tertiary";
    var imageStyle = hasImage ?  "full-width-image" : string.Empty;
}

<section class="widget @imageStyle centered-description">

    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <div class="background-image">
            <img class="img-fluid" src="@Model.ImageUrl" alt="" data-object-fit>
            <div class="background-filter" aria-hidden="true"></div>
        </div>
    }

    <div class="container content">
        <div class="row">
            <div class="col-sm-8 offset-sm-2 text-center">
                <div class="subtitle">
                    @if (editMode)
                    {
                        Html.RenderPartial("InlineEditors/_TextEditor", new TextEditorViewModel
                        {
                            PropertyName = nameof(CenteredTextWidgetProperties.Subtitle),
                            Text = Model.Subtitle,
                            EnableFormatting = false
                        });
                    }
                    else
                    {
                        @Html.Raw(Model.Subtitle)
                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-8 offset-sm-2 text-center">
                <h2 class="title">
                    @if (editMode)
                    {
                        Html.RenderPartial("InlineEditors/_TextEditor", new TextEditorViewModel
                        {
                            PropertyName = nameof(CenteredTextWidgetProperties.Title),
                            Text = Model.Title,
                            EnableFormatting = false
                        });
                    }
                    else
                    {
                        @Html.Raw(Model.Title)
                    }
                </h2>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-8 offset-sm-2 text-center">
                <div class="description">
                    @if (editMode)
                    {
                        Html.RenderPartial("InlineEditors/_TextEditor", new TextEditorViewModel
                        {
                            PropertyName = nameof(CenteredTextWidgetProperties.Description),
                            Text = Model.Description,
                            EnableFormatting = true
                        });
                    }
                    else
                    {
                        @Html.Raw(Model.Description)
                    }
                </div>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.ButtonText) && !string.IsNullOrEmpty(Model.ButtonLink))
        {
            <div class="row no-gutters justify-content-center">
                <a href="@Model.ButtonLink" class="btn @buttonStyle text-size-normal">
                    @Model.ButtonText
                </a>
            </div>
        }
    </div>
</section>